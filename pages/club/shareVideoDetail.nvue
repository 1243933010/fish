<template>
	<view>
		<view style="background: red;" :style="{height:statusBarHeight+'px'}"></view>
		<view :style="{height:Height+'px'}">
			<swiper class="swiper" @change="change" :indicator-dots="false" :vertical="true" :style="{height:Height+'px'}">
				<swiper-item class="swiper_item" v-for="(item,index) in videoList"   :key="index" style="background-color: black;">
					<video :id="item.videoId"   @tap="dblClick" class="video"  @click="dblClick" :src="item.circle_video" loop :controls="false"
					 :autoplay="item.flog" :style="{height:Height+'px'}"  object-fit="contain" enable-play-gesture enable-progress-gesture @play="play" @pause="pause"></video>
				</swiper-item>
			</swiper>
		</view>


		<view class="userinfo">
			<view class="user_icon">
				<image class="user_icon_img" :src="indexObj.avatar" mode="widthFix"></image>
				<text class="user_icon_text" @click="attention" v-if="indexObj.is_attentionuser==='0'">关注</text>
				<text class="user_icon_text"  @click="unsubscribe" v-if="indexObj.is_attentionuser==='1'">已关注</text>
			</view>
			<view class="fn">
				<view class="great" @click="setZan">
					<image class="great_img" :src="zan" mode="widthFix"></image>
					<text class="great_text">{{indexObj.likenum}}</text>
				</view>
				<view class="talk" @click="seeTalk">
					<image class="talk_img" src="../../static/index/talk.png" mode="widthFix"></image>
					<text class="talk_text">{{indexObj.reviewnum}}</text>
				</view>
				<view class="share" @click="share">
					<image class="share_img" src="../../static/index/share.png" mode="widthFix"></image>
					<text class="share_text">分享</text>
				</view>
			</view>
		</view>
		<view class="video_msg">
			<view class="video_msg_name">
				<text class="video_msg_name_text">{{indexObj.circle_content}}</text>
			</view>
		</view>

		<!-- <view class="edit">
			<view class="edit_con">
				<image class="edit_con_img" src="../../../static/index/edit.png" mode="widthFix"></image>
				<input class="edit_con_inp" @confirm="confirm" confirm-type="send" type="text" placeholder-class="edit_con_placeholder"
				 placeholder="写评论" v-model="inp" />
			</view>
		</view> -->
<view class="video_play" :style="{top:(Height/2)+'px'}" v-if="!playStatus">
			<image class="video_play_img" @click="playVideo"   src="../../static/index/video_play.png" mode="widthFix"></image>
		</view>

		<uni-popup type="bottom" ref="popup">

			<view class="content">
				<scroll-view scroll-y="true" class="scroll-Y" style="height: 700rpx;">
					<view class="content_item" v-for="(item,index) in talkList" :key="index">
						<view class="content_item_left">
							<image class="content_item_left_img" :src="item.avatar" mode="widthFix"></image>
						</view>
						<view class="content_item_right">
							<view class="content_item_right_name">
								<text class="content_item_right_name_text">{{item.username}}</text>
							</view>
							<view class="content_item_right_con">
								<text class="content_item_right_con_text">{{item.review_content}}</text>
							</view>
							<view class="content_item_right_time">
								<text class="content_item_right_time_text">{{item.create_time}}</text>
							</view>
						</view>
					</view>
					
				</scroll-view>
				<view class="edit">
					<view class="edit_con">
						<image class="edit_con_img" src="../../static/club/edit.png" mode="widthFix"></image>
						<input class="edit_con_inp" @confirm="confirm" confirm-type="send" type="text" placeholder-class="edit_con_placeholder"
						 placeholder="写评论" v-model="inp" />
					</view>
				</view>

			</view>
		</uni-popup>


	</view>
</template>

<script>
	var strShareUrl = ""
	var strShareTitle = ""
	var strShareSummary = ""
	var strShareImageUrl = ""
	// #ifdef APP-PLUS
		// 如下为分享内容定义，可根据业务需求自行定义
		// var strShareUrl = "https://uniapp.dcloud.io"
		// var strShareTitle = "跨端神器uni-app，开发一次，App、小程序、H5全覆盖"
		// var strShareSummary = "iOS、Android、H5、微信/支付宝/百度小程序，一套代码全覆盖"
		// var strShareImageUrl = "https://img-cdn-qiniu.dcloud.net.cn/uniapp/images/uni@2x.png"
		
		//以下为计算菜单的nview绘制布局，为固定算法，使用者无关关心
		var screenWidth = plus.screen.resolutionWidth
		//以360px宽度屏幕为例，上下左右边距及2排按钮边距留25像素，图标宽度55像素，同行图标间的间距在360宽的屏幕是30px，但需要动态计算，以此原则计算4列图标分别的left位置
		//图标下的按钮文字距离图标5像素，文字大小12像素
		//底部取消按钮高度固定为44px
		//TODO 未处理横屏和pad，这些情况6个图标应该一排即可
		var margin = 25,
			iconWidth = 55,
			icontextSpace = 5,
			textHeight = 12
		var left1 = margin / 360 * screenWidth
		var iconSpace = (screenWidth - (left1 * 2) - (iconWidth * 4)) / 3 //屏幕宽度减去左右留白间距，再减去4个图标的宽度，就是3个同行图标的间距
		if (iconSpace <= 5) { //屏幕过窄时，缩小边距和图标大小，再算一次
			margin = 15
			iconWidth = 40
			left1 = margin / 360 * screenWidth
			iconSpace = (screenWidth - (left1 * 2) - (iconWidth * 4)) / 3 //屏幕宽度减去左右留白间距，再减去4个图标的宽度，就是3个同行图标的间距
		}
		var left2 = left1 + iconWidth + iconSpace
		var left3 = left1 + (iconWidth + iconSpace) * 2
		var left4 = left1 + (iconWidth + iconSpace) * 3
		var top1 = left1
		var top2 = top1 + iconWidth + icontextSpace + textHeight + left1
	// 	console.log("screenWidth: " + screenWidth + " ;height: " + plus.screen.resolutionHeight);
	// 	console.log("left1: " + left1);
	// 	console.log("iconSpace: " + iconSpace);
		var nvMask = new plus.nativeObj.View("nvMask", { //先创建遮罩层
			top: '0px',
			left: '0px',
			height: '100%',
			width: '100%',
			backgroundColor: 'rgba(0,0,0,0.2)'
		});
		nvMask.addEventListener("click", function() { //处理遮罩层点击
			nvMask.hide();
			nvImageMenu.hide();
		})
		var nvImageMenu = new plus.nativeObj.View("nvImageMenu", { //创建底部图标菜单
			bottom: '0px',
			left: '0px',
			height: '264px',
			width: '100%',
			backgroundColor: 'rgb(255,255,255)'
		});
		//绘制底部图标菜单的内容
		nvImageMenu.draw([
			{
				tag: 'rect',//菜单顶部的分割灰线
				color: '#e7e7e7',
				position: {
					top: '0px',
					height: '1px'
				}
			},
			{
				tag: 'font',
				id: 'sharecancel',//底部取消按钮的文字
				text: '取消分享',
				textStyles: {
					size: '14px'
				},
				position: {
					bottom: '0px',
					height: '44px'
				}
			},
			{
				tag: 'rect',//底部取消按钮的顶部边线
				color: '#e7e7e7',
				position: {
					bottom: '45px',
					height: '1px'
				}
			},
			{
				tag: 'img',
				id: 'imgwechatfriend',
				src: '/static/sharemenu/wechatfriend.png',
				position: {
					top: top1,
					left: left1,
					width: iconWidth,
					height: iconWidth
				}
			},
			{
				tag: 'font',
				id: 'fontwechatfriend',
				text: '微信好友',
				textStyles: {
					size: textHeight
				},
				position: {
					top: top1 + iconWidth + icontextSpace,
					left: left1,
					width: iconWidth,
					height: textHeight
				}
			},
			{
				tag: 'img',
				id: 'imgwechatmoments',
				src: '/static/sharemenu/wechatmoments.png',
				position: {
					top: top1,
					left: left2,
					width: iconWidth,
					height: iconWidth
				}
			},
			{
				tag: 'font',
				id: 'fontwechatmoments',
				text: '微信朋友圈',
				textStyles: {
					size: textHeight
				},
				position: {
					top: top1 + iconWidth + icontextSpace,
					left: left2 - 2.5,
					width: iconWidth + 5,
					height: textHeight
				}
			},
			// {
			// 	tag: 'img',
			// 	id: 'imgweibo',
			// 	src: '/static/sharemenu/weibo.png',
			// 	position: {
			// 		top: top1,
			// 		left: left3,
			// 		width: iconWidth,
			// 		height: iconWidth
			// 	}
			// },
			// {
			// 	tag: 'font',
			// 	id: 'fontweibo',
			// 	text: '微博',
			// 	textStyles: {
			// 		size: textHeight
			// 	},
			// 	position: {
			// 		top: top1 + iconWidth + icontextSpace,
			// 		left: left3,
			// 		width: iconWidth,
			// 		height: textHeight
			// 	}
			// },
			// {
			// 	tag: 'img',
			// 	id: 'imgqq',
			// 	src: '/static/sharemenu/qq.png',
			// 	position: {
			// 		top: top1,
			// 		left: left4,
			// 		width: iconWidth,
			// 		height: iconWidth
			// 	}
			// },
			// {
			// 	tag: 'font',
			// 	id: 'fontqq',
			// 	text: 'QQ',
			// 	textStyles: {
			// 		size: textHeight
			// 	},
			// 	position: {
			// 		top: top1 + iconWidth + icontextSpace,
			// 		left: left4,
			// 		width: iconWidth,
			// 		height: textHeight
			// 	}
			// },
			// {
			// 	tag: 'img',
			// 	id: 'imgcopyurl',
			// 	src: '/static/sharemenu/copyurl.png',
			// 	position: {
			// 		top: top2,
			// 		left: left1,
			// 		width: iconWidth,
			// 		height: iconWidth
			// 	}
			// },
			// {
			// 	tag: 'font',
			// 	id: 'fontcopyurl',
			// 	text: '复制',
			// 	textStyles: {
			// 		size: textHeight
			// 	},
			// 	position: {
			// 		top: top2 + iconWidth + icontextSpace,
			// 		left: left1,
			// 		width: iconWidth,
			// 		height: textHeight
			// 	}
			// },
			// {
			// 	tag: 'img',
			// 	id: 'imgmore',
			// 	src: '/static/sharemenu/more.png',
			// 	position: {
			// 		top: top2,
			// 		left: left2,
			// 		width: iconWidth,
			// 		height: iconWidth
			// 	}
			// },
			// {
			// 	tag: 'font',
			// 	id: 'fontmore',
			// 	text: '更多',
			// 	textStyles: {
			// 		size: textHeight
			// 	},
			// 	position: {
			// 		top: top2 + iconWidth + icontextSpace,
			// 		left: left2,
			// 		width: iconWidth,
			// 		height: textHeight
			// 	}
			// },
			//如果想要增加更多按钮，请在这里继续添加，第二列还有2个空位
		])
		nvImageMenu.addEventListener("click", function(e) { //处理底部图标菜单的点击事件，根据点击位置触发不同的逻辑
			// console.log("click menu"+JSON.stringify(e));
			if (e.screenY > plus.screen.resolutionHeight - 44) { //点击了底部取消按钮
				nvMask.hide();
				nvImageMenu.hide();
			} else if (e.clientX < 5 || e.clientX > screenWidth - 5 || e.clientY < 5) {
				//屏幕左右边缘5像素及菜单顶部5像素不处理点击
			} else { //点击了图标按钮
				var iClickIndex = -1 //点击的图标按钮序号，第一个图标按钮的index为0
				var iRow = e.clientY < (top2 - (left1 / 2)) ? 0 : 1
				var iCol = -1
				if (e.clientX < (left2 - (iconSpace / 2))) {
					iCol = 0
				} else if (e.clientX < (left3 - (iconSpace / 2))) {
					iCol = 1
				} else if (e.clientX < (left4 - (iconSpace / 2))) {
					iCol = 2
				} else {
					iCol = 3
				}
				if (iRow == 0) {
					iClickIndex = iCol
				} else {
					iClickIndex = iCol + 4
				}
				console.log("点击按钮的序号: " + iClickIndex);
				if (iClickIndex >= 0 && iClickIndex <= 5) { //处理具体的点击逻辑，此处也可以自行定义逻辑。如果增减了按钮，此处也需要跟着修改
					var strProvider="",strScene=""
					switch (iClickIndex) {
						case 0:
							strProvider = "weixin"
							strScene = "WXSceneSession"
							break;
						case 1:
							strProvider = "weixin"
							strScene = "WXSenceTimeline"
							break;
						case 2:
							strProvider = "sinaweibo"
							break;
						case 3:
							strProvider = "qq"
							break;
						case 4:
							uni.setClipboardData({
								data: strShareUrl,
								complete() {
									uni.showToast({
										title: "已复制到剪贴板"
									})
								}
							})
							break;
						case 5:
							plus.share.sendWithSystem({
								content: strShareUrl,
							})
							break;
					}
					if (strProvider!="") { //点击了0-3序号的这4个按钮
					if(strProvider==='qq'){
						uni.share({
							provider: strProvider,
							scene:strScene,
							type: 1,
							href: strShareUrl,
							title: strShareTitle,
							summary: strShareSummary,
							imageUrl: strShareImageUrl,
							success: function(res) {
								console.log("success:" + JSON.stringify(res));
							},
							fail: function(err) {
								console.log("fail:" + JSON.stringify(err));
							}
						})
					}else{
						uni.share({
							provider: strProvider,
							scene:strScene,
							type: 0,
							href: strShareUrl,
							title: strShareTitle,
							summary: strShareSummary,
							imageUrl: strShareImageUrl,
							success: function(res) {
								console.log("success:" + JSON.stringify(res));
							},
							fail: function(err) {
								console.log("fail:" + JSON.stringify(err));
							}
						})
					}
						
					}
				}
			}
		})
		/* nvImageMenu.addEventListener("touchstart", function(e) {
			if (e.screenY > (plus.screen.resolutionHeight - 44)) {
				//TODO 这里可以处理按下背景变灰的效果
			}
		})
		nvImageMenu.addEventListener("touchmove", function(e) {
			//TODO 这里可以处理按下背景变灰的效果
			if (e.screenY > plus.screen.resolutionHeight - 44) {}
		})
		nvImageMenu.addEventListener("touchend", function(e) {
			//TODO 这里可以处理释放背景恢复的效果
		})
		*/
		// #endif
	import popup from '@/components/uni-popup/uni-popup.vue';
	export default {
		components: {
			popup
		},
		data() {
			return {
				token: '',
				roomId:'',
				Height: 1000,
				statusBarHeight: '',
				inp: '',
				videoList: [],
				videoIndex: 0,
				videoContext: null,
				type: 0, //什么类型得视频
				list: [], //接受得总数组
				defaultId: '', //点击得视频id
				indexObj: {}, //点击得那个对象
				offset: 2,
				talkList: [],
				zan:'../../static/index/zan.png',
				playStatus:true
			}
		},
		created() {
			let {
				token
			} = uni.getStorageSync('userinfo');
			this.token = token;
			uni.getSystemInfo({
				success: (data) => {
					this.Height = data.windowHeight - data.statusBarHeight;
					this.statusBarHeight = data.statusBarHeight;
				}
			})

			this.type = getApp().globalData.shareVideoMsg.type;
			this.list = getApp().globalData.shareVideoMsg.list;
			this.defaultId = getApp().globalData.shareVideoMsg.id;
			// console.log(getApp().globalData.shareVideoMsg)
			let arr = JSON.parse(JSON.stringify(this.list));
			let endArr = [];
			this.list.forEach((val, ind) => {
				if (val.id == this.defaultId) {
					val.videoId = 'video' + val.id;
					val.flog = true;
					this.videoList.push(val);
					this.indexObj = val;
					strShareUrl = `http://47.95.39.75:9706/wap/index.html?id=${val.id}`;
					strShareTitle = val.circle_content;
					strShareImageUrl = val.controimg;
					// console.log(val)
					endArr.push(...arr.splice(ind + 1, this.list.length))
				}
			})
			this.getTalkList(this.defaultId);
			this.getVideoDetail();
			this.$nextTick(() => {
				endArr.forEach((val, ind) => {
					val.videoId = 'video' + val.id;
					this.videoList.push(val);
				})
			})

		}, //很迷,迷到姥姥家了
		onLoad(e) {
			this.roomId = e.roomid;
		},
		onReady() {
			let str = this.videoList[this.videoIndex].videoId;
			console.log(str)
			// #ifndef H5
			this.videoContext = uni.createVideoContext(str);
			this.videoContext.play();
			// #endif
		},
		onUnload() {
			getApp().globalData.videoMsg = {};
		},
		onShow() {
			// #ifdef APP-PLUS
			nvMask.hide()
			nvImageMenu.hide() //5+应支持从底部向上弹出的动画
			// #endif
		},
		methods: {
			share(){
				// uni.showToast({
				// 	icon:'none',
				// 	title:'暂未开放'
				// })
				// return
				// #ifdef APP-PLUS
				nvMask.show()
				nvImageMenu.show() //5+应支持从底部向上弹出的动画
				// #endif
			},
			dblClick(){
				if(this.playStatus){
					// #ifndef H5
					this.videoContext.pause();
					// #endif
				}else{
					// #ifndef H5
					this.videoContext.play();
					// #endif
				}
				this.playStatus = !this.playStatus;
				// if(!this.startClick){
				// 	this.startClick = new Date().getTime();
				// }else{
				// 	console.log(this.startClick-this.endClick)
				// 	console.log(this.startClick,this.endClick)
				// 	this.endClick = new Date().getTime();
				// 	if(this.endClick-this.startClick<350){
				// 		this.startClick = this.endClick;
				// 		if(this.playStatus){
				// 			// #ifndef H5
				// 			this.videoContext.pause();
				// 			// #endif
				// 		}else{
				// 			// #ifndef H5
				// 			this.videoContext.play();
				// 			// #endif
				// 		}
				// 		this.playStatus = !this.playStatus;
				// 		console.log('双击了');
				// 	}else{
				// 		this.startClick = new Date().getTime();
				// 	}
				// }
			},
			async attention(){
				let {user_id} = uni.getStorageSync('userinfo');
				if(user_id===this.indexObj.userid){
					uni.showToast({
						icon:'none',
						title:'不能关注自己'
					})
					return
				}
				console.log(this.indexObj)
				let obj = {token:this.token,userid:this.indexObj.userid};
				let res = await this.Post('/api/Userfriend/AddAttentionUser',obj);
				uni.showToast({icon:'none',title:res.data.msg});
				if(res.data.code===1){
					this.getVideoDetail();
				}
			},//关注
			async unsubscribe(){
				console.log(this.indexObj)
				let obj = {token:this.token,userid:this.indexObj.userid};
				let res = await this.Post('/api/Userfriend/DelAttentionUser',obj);
				uni.showToast({icon:'none',title:res.data.msg});
				if(res.data.code===1){
					this.getVideoDetail();
				}
			},//取消关注
			async getVideoDetail(){
				let res = await this.Post('/api/Groundcircle/CircleVideoinfo',{token:this.token,id:this.indexObj.id});
				if(res.data.code ===1){
					this.indexObj = res.data.data;
					if(res.data.data.is_like==='1'){
						this.zan = '../../static/index/red_zan.png';
					}else{
						this.zan = '../../static/index/zan.png';
					}
					console.log(this.indexObj)
				}
			},
		    async setZan(){
				if(this.indexObj.is_like==='1'){
					uni.showToast({icon:'none',title:'您已经点过赞了'});
					return;
				}
				let res = await this.Post('/api/Groundcircle/LikeCircleVideo',{token:this.token,id:this.indexObj.id});
				uni.showToast({icon:'none',title:res.data.msg});
				if(res.data.code===1){
					this.zan = '../../static/index/red_zan.png';
					this.getVideoDetail();
					// this.getTalkList(this.indexObj.id);
				}
			},//点赞
			async confirm(){
				let obj = { token:this.token,video_id:this.indexObj.id,review_content:this.inp};
				let res  = await this.Post('/api/Groundcircle/AddCircleVideoReview',obj);
				uni.showToast({icon:'none',title:res.data.msg});
				if(res.data.code===1){
					this.getTalkList(this.indexObj.id);
					this.getVideoDetail();
					this.inp = '';
					uni.hideKeyboard()
				}
			},//评论
			seeTalk() {
				this.$refs.popup.open();
			}, //打开留言弹窗
			async getTalkList(id) {
				let obj = {
					video_id: id,
					offset: 1,
					limit: 50
				};
				let res = await this.Post('/api/Groundcircle/ListCircleVideoReview', obj);
				if (res.data.code === 1) {
					this.talkList = res.data.data.list;
				}else{
					this.talkList =[];
				}
				console.log(res)
			}, //获取当前视频得留言列表
			change(e) {
				if(e.detail.current+1===this.videoList.length){
					uni.showToast({
						icon:'none',
						title:'已没有更多视频'
					})
				}
				this.zan = '../../static/index/zan.png';
				this.videoIndex = e.detail.current;
				this.indexObj = this.videoList[this.videoIndex];
				strShareUrl = `http://47.95.39.75:9706/wap/index.html?id=${this.indexObj.id}`;
				strShareTitle = this.indexObj.circle_content;
				strShareImageUrl = this.indexObj.controimg;
				this.getVideoDetail();
				this.defaultId = this.videoList[this.videoIndex].id;
				this.getTalkList(this.defaultId);
				console.log(this.indexObj)
				// #ifndef H5
				this.videoContext.pause();
				// #endif
				if (this.videoList.length - this.videoIndex <= 2) {
					this.getType();
				}
				let str = this.videoList[this.videoIndex].videoId;
				this.videoContext = uni.createVideoContext(str);
				this.videoContext.play();
			},
			getType() {
				let obj;
				if (this.type === 0) { //推荐
					obj = {
						offset: this.offset,
						limit: 20,
						keyword: '',
						fishground_id:this.roomId,
						isrecommend: '1',
						type: '1'
					};
				} else if (this.type === 1) { //最新
					obj = {
						offset: this.offset,
						limit: 20,
						keyword: '',
						fishground_id:this.roomId,
						isrecommend: '0',
						type: '2'
					};
				} 
				this.getMsg(obj);
			},
			async getMsg(obj) {
				console.log(obj)
				let res = await this.Post('/api/Groundcircle/ListCircleVideo', obj);
				console.log(res)
				if (res.data.code === 1) {
					this.this.offset++;
					res.data.data.list.forEach((val, ind) => {
						val.videoId = 'video' + val.id;
						this.list.push(val)
					})
				}
			},
			Post(url, data) {
				let baseUrl = 'http://47.95.39.75:9706';
				let res = uni.getStorageSync('userinfo');
				// console.log(res)
				return new Promise((resolve, reject) => {
					uni.request({
						method: 'POST',
						url: baseUrl + url,
						data,
						header: {
							'content-type': 'application/x-www-form-urlencoded',
							'token': res.token
						},
						success: (res) => {
							// console.log(res)
							if (res.data.code === 401) {
								setTimeout(() => {
									uni.reLaunch({
										url: '/pages/login/login'
									})
								}, 500)
							}
							resolve(res);
						},
						fail: (err) => {
							// console.log(err);
							reject(err)
						}
					})
				})
			}
		}
	}
</script>

<style>
	.swiper_item{
		/* #ifndef APP-PLUS */
		display: flex;
		/* #endif */
		justify-content: center;
		align-items: center;
	}
	.video_play{
		position: absolute;
		top: 100rpx;
		left: 375rpx;
		/* transform: translate(-50% -50%); */
	}
	.video_play_img{
		width: 50rpx;
		height: 50rpx;
	}
	.content {
		width: 750rpx;
		background-color: white;
		border-top-left-radius: 15rpx;
		border-top-right-radius: 15rpx;
		padding: 15rpx 0;
		/* max-height: 900rpx; */
		/* overflow-y: scroll; */
	}

	.content_item {
		width: 730rpx;
		margin: 20rpx 0;
		/* #ifndef APP-PLUS */
		display: flex;
		/* #endif */
		flex-direction: row;
		padding-left: 20rpx;
	}

	.content_item_left {
	width: 90rpx;
	margin-right: 15rpx;
	}

	.content_item_left_img {
		width: 90rpx;
		height:90rpx !important;
		border-radius:50%;
		margin-right: 10rpx;
	}

	.content_item_right {
		/* #ifndef APP-PLUS */
		display: flex;
		flex-direction: column;
		/* #endif */
	}

	.content_item_right_name {
		margin-bottom: 10rpx;
	}
	.content_item_right_name_text{
		font-size: 26rpx;
		color: #44B9F3;
	}
	.content_item_right_con {
		
		margin-bottom: 10rpx;
	}
	.content_item_right_con_text{
		width: 600rpx;
		/* #ifndef APP-PLUS */
		display: flex;
		/* #endif */
		flex-wrap: wrap;
		font-size: 28rpx;
		/* color: #44B9F3; */
	}
	.content_item_right_time {
	}
	.content_item_right_time_text{
		font-size: 25rpx;
	}
	.video {
		width: 750rpx;
		z-index: -1;
	}

	.userinfo {
		position: absolute;
		right: 20rpx;
		bottom: 70rpx;
		/* #ifndef APP-PLUS */
		display: flex;
		flex-direction: column;
		/* #endif */
		align-items: center;
	}

	.user_icon {
		/* #ifndef APP-PLUS */
		display: flex;
		flex-direction: column;
		/* #endif */
		align-items: center;
		margin-bottom: 50rpx;
	}

	.user_icon_img {
		width: 100rpx;
		height: 100rpx;
		border-radius: 50%;
		margin-bottom: 15rpx;
	}

	.user_icon_text {
		width: 90rpx;
		text-align: center;
		background-color: red;
		color: white;
		font-size: 27rpx;
		padding: 7rpx 0;
		border-radius: 5rpx;
	}

	.great,
	.talk,
	.share {
		/* #ifndef APP-PLUS */
		display: flex;
		flex-direction: column;
		/* #endif */
		align-items: center;
		margin-bottom: 25rpx;
	}

	.great_img,
	.talk_img,
	.share_img {
		width: 50rpx;
		height: 50rpx;
		margin-bottom: 10rpx;
	}

	.great_text,
	.talk_text,
	.share_text {
		font-size: 27rpx;
		color: white;
	}

	.video_msg {
		position: absolute;
		left: 20rpx;
		bottom: 100rpx;
	}

	.video_msg_name {}

	.video_msg_name_text {
		width: 600rpx;
		/* #ifndef APP-PLUS */
		display: flex;
		flex-direction: column;
		word-break:break-all;
		/* #endif */
		flex-wrap: wrap;
		font-size: 32rpx;
		color: white;
	}

	.edit {
		width: 750rpx;
		height: 70rpx;
		/* position: absolute; */
		/* bottom: 0; */
		/* left: 0; */
	}

	.edit_con {
		/* #ifndef APP-PLUS */
		display: flex;
		/* #endif */
		flex-direction: row;
		align-items: center;
		width: 700rpx;
		height: 70rpx;
		padding-left: 20rpx;
		margin-left: 20rpx;
		background-color:rgba(121, 120, 131,0.5);
		border-radius: 10rpx;
	}

	.edit_con_img {
		width: 40rpx;
		height: 40rpx;
		/* margin-right: 16rpx; */
	}

	.edit_con_inp {
		width: 700rpx;
		height: 70rpx;
		font-size: 29rpx;
		color: black;
	}

	.edit_con_placeholder {
		color: black;
		font-size: 15rpx;
	}
</style>
